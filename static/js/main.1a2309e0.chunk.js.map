{"version":3,"sources":["components/AddNote.js","components/Note.js","components/NotesLists.js","components/Search.js","components/Header.js","App.js","index.js"],"names":["AddNote","handleAddNote","useState","notetext","setNoteText","className","cols","rows","placeholder","value","onChange","event","target","length","onClick","trim","Note","id","text","date","handleDeleteNote","size","NotesLists","notes","map","note","Search","handleSearchNote","type","Header","handleDarkMode","previousDarkMode","App","setNotes","searchText","setSearchText","darkMode","setDarkMode","useEffect","savedNotes","JSON","parse","localStorage","getItem","setItem","stringify","filter","toLowerCase","includes","Date","newNote","nanoid","toLocaleDateString","newNotes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a2309e0.chunk.js","sourcesContent":["import React, {useState} from 'react'\n\nconst AddNote = ({handleAddNote}) => {\n    const [notetext, setNoteText] = useState('');\n    const characterLimit = 200;\n    \n    const handleChange = (event) => {\n        if(characterLimit - event.target.value.length >= 0){\n      setNoteText(event.target.value);\n    }}\n\n    const handleSaveClick = ()=> {\n        if(notetext.trim().length > 0){\n        handleAddNote(notetext);\n        setNoteText('')\n       \n    }\n\n    }\n    return (\n        <div className=\"note new\">\n            <textarea \n             cols=\"10\"\n             rows=\"8\" \n             placeholder=\"Type to add a note...\" \n             value = {notetext}\n             onChange={handleChange}>\n\n            </textarea>\n            <div className=\"note-footer\">\n                <small>{characterLimit - notetext.length} remaining..</small>\n                <button className=\"save\" onClick={handleSaveClick}>Save</button>\n            </div>\n        </div>\n    )\n}\n\nexport default AddNote\n","import {MdDeleteForever} from 'react-icons/md'\nimport React from 'react'\n\nconst Note = ({id,text,date,handleDeleteNote}) => {\n    return (\n        <div className=\"note\">\n            <span>{text}</span>\n            <div className=\"note-footer\">\n                <small>{date}</small>\n                <MdDeleteForever className=\"delete-icon\" size=\"1.3em\" onClick={()=>handleDeleteNote(id)}/>\n          \n            </div>\n            \n        </div>\n    )\n}\n export default Note;","import React from 'react'\nimport AddNote from './AddNote';\nimport Note from './Note';\n\n\nconst NotesLists = ({notes,handleAddNote,handleDeleteNote}) => {\n    return (\n        <div className='notes-list'>\n            {notes.map((note)=><Note key = {note.id} id ={note.id} text={note.text} date={note.date} handleDeleteNote={handleDeleteNote}/>)}\n\n            <AddNote handleAddNote={handleAddNote} />\n        </div>\n    )\n}\n\nexport default NotesLists;\n","import React from 'react'\nimport {MdSearch} from 'react-icons/md'\n\nconst Search = ({handleSearchNote}) => {\n    return (\n        <div className=\"search\">\n            <MdSearch className=\"search-icons\" size=\"1.3em\" />\n            <input\n            onChange = {(event)=>handleSearchNote(event.target.value)}\n             type=\"text\" placeholder=\"Search...\" />\n        </div>\n    )\n}\n\nexport default Search\n","import React from 'react'\n\nconst Header = ({handleDarkMode}) => {\n    return (\n        <div className=\"header\">\n            <h1>Notes</h1>\n            <button \n            onClick= {()=>handleDarkMode((previousDarkMode)=>!previousDarkMode)}\n            className=\"save\">Toggle Mode</button>\n            \n        </div>\n    )\n}\n\nexport default Header\n","import React, { useState, useEffect } from \"react\";\nimport { nanoid } from \"nanoid\"\nimport NotesLists from \"./components/NotesLists\";\nimport Search from \"./components/Search\";\nimport Header from \"./components/Header\";\n\nconst App = () => {\n\n    const [notes, setNotes] = useState([]);\n\n    const [searchText, setSearchText] = useState('')\n    const [darkMode, setDarkMode] = useState(false)\n\n    useEffect(() => {\n      const savedNotes = JSON.parse(localStorage.getItem('react-notes-app-data'))\n\n      if(savedNotes)\n      {\n          setNotes(savedNotes)\n      }\n    }, [])\n    useEffect(() => {\n        localStorage.setItem('react-notes-app-data',JSON.stringify(notes))\n    }, [notes])\n\n    const addNote = (text) =>{\n        const date = new Date();\n        const newNote = {\n            id: nanoid(),\n            text:text,\n            date: date.toLocaleDateString()\n        } \n        const newNotes = [...notes,newNote];\n        setNotes(newNotes);\n\n    }\n     const deleteNote = (id) =>{\n        const newNotes = notes.filter((note)=>note.id!== id);\n        setNotes(newNotes)\n     }\n\n\n    return (\n        <div className={`${darkMode && 'dark-mode'}`}>\n        <div className=\"container\">\n\n            <Header handleDarkMode ={setDarkMode}/>\n            <Search handleSearchNote={setSearchText}/>\n\n            <NotesLists notes={notes.filter((note)=>note.text.toLowerCase().includes(searchText))}\n             handleAddNote={addNote}  \n             handleDeleteNote={deleteNote}/>\n        </div>\n        </div>)\n\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}